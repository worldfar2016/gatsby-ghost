{"version":3,"sources":["webpack:///./src/templates/post.js"],"names":["__webpack_require__","r","__webpack_exports__","d","postQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","_components_common__WEBPACK_IMPORTED_MODULE_2__","_components_common_meta__WEBPACK_IMPORTED_MODULE_3__","Post","_ref","data","location","post","ghostPost","a","createElement","Fragment","type","codeinjection_styles","className","feature_image","src","alt","title","dangerouslySetInnerHTML","__html","html"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KA6DeY,UA/CF,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,SACZC,EAAOF,EAAKG,UAElB,OACQX,EAAAY,EAAAC,cAAAb,EAAAY,EAAAE,SAAA,KACId,EAAAY,EAAAC,cAACR,EAAA,EAAD,CACIG,KAAMA,EACNC,SAAUA,EACVM,KAAK,YAETf,EAAAY,EAAAC,cAACV,EAAAS,EAAD,KACIZ,EAAAY,EAAAC,cAAA,SAAOE,KAAK,YAAZ,GAA2BL,EAAKM,uBAEpChB,EAAAY,EAAAC,cAACT,EAAA,EAAD,KACIJ,EAAAY,EAAAC,cAAA,OAAKI,UAAU,aACXjB,EAAAY,EAAAC,cAAA,WAASI,UAAU,WACbP,EAAKQ,cACHlB,EAAAY,EAAAC,cAAA,UAAQI,UAAU,sBACdjB,EAAAY,EAAAC,cAAA,OAAKM,IAAMT,EAAKQ,cAAgBE,IAAMV,EAAKW,SACnC,KAChBrB,EAAAY,EAAAC,cAAA,WAASI,UAAU,qBACfjB,EAAAY,EAAAC,cAAA,MAAII,UAAU,iBAAiBP,EAAKW,OAGpCrB,EAAAY,EAAAC,cAAA,WACII,UAAU,qCACVK,wBAAyB,CAAEC,OAAQb,EAAKc,cAuBrE,IAAM1B,EAAS","file":"component---src-templates-post-js-211b4293c81d8808d86f.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\n\nimport { Layout } from '../components/common'\nimport { MetaData } from '../components/common/meta'\n\n/**\n* Single post view (/:slug)\n*\n* This file renders a single post and loads all the content.\n*\n*/\nconst Post = ({ data, location }) => {\n    const post = data.ghostPost\n\n    return (\n            <>\n                <MetaData\n                    data={data}\n                    location={location}\n                    type=\"article\"\n                />\n                <Helmet>\n                    <style type=\"text/css\">{`${post.codeinjection_styles}`}</style>\n                </Helmet>\n                <Layout>\n                    <div className=\"container\">\n                        <article className=\"content\">\n                            { post.feature_image ?\n                                <figure className=\"post-feature-image\">\n                                    <img src={ post.feature_image } alt={ post.title } />\n                                </figure> : null }\n                            <section className=\"post-full-content\">\n                                <h1 className=\"content-title\">{post.title}</h1>\n\n                                {/* The main post content */ }\n                                <section\n                                    className=\"content-body load-external-scripts\"\n                                    dangerouslySetInnerHTML={{ __html: post.html }}\n                                />\n                            </section>\n                        </article>\n                    </div>\n                </Layout>\n            </>\n    )\n}\n\nPost.propTypes = {\n    data: PropTypes.shape({\n        ghostPost: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            html: PropTypes.string.isRequired,\n            feature_image: PropTypes.string,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.object.isRequired,\n}\n\nexport default Post\n\nexport const postQuery = graphql`\n    query($slug: String!) {\n        ghostPost(slug: { eq: $slug }) {\n            ...GhostPostFields\n        }\n    }\n`\n"],"sourceRoot":""}